# -*- coding: utf-8 -*-
import re

__all__ = ['Result', 'IdentitySafe']


class Result(object):
    """
    Here are some common usages of result::

        >>> result = Result(True, 'The id is perfect')
        >>> bool(result)
        True
        >>> str(result)
        'The id is perfect'

    :param valid: if the id is valid to use.
    :param message: a message related to the id.
    """
    def __init__(self, valid, message):
        self.valid = valid
        self.message = message

    def __str__(self):
        return self.message

    def __unicode__(self):
        return self.message

    def __nonzero__(self):
        return self.valid

    def __bool__(self):
        return self.valid


class IdentitySafe(object):
    minimum_length = 3
    maximum_length = 30

    def __init__(self, minimum_length=None, maximum_length=None):
        if minimum_length:
            self.minimum_length = minimum_length
        if maximum_length:
            self.maximum_length = maximum_length
        self.pattern = (
            # Only contain digits, letters and "_"
            r'^[0-9_a-zA-Z]'
            # Minimum $minimum_length characters
            # Maximum $maximum_length characters
            '{' + str(self.minimum_length) + ',' + str(self.maximum_length) + '}$')

    def check(self, raw):
        """ Check the id.
            :param raw: raw text id.
        """
        if not re.match(self.pattern, raw):
            return Result(False, 'The id %s not valid. The id only contains digits, letters and "_", '
                                 'minimum %s characters, maximum %s characters' % (raw, self.minimum_length,
                                                                                   self.maximum_length))
        return Result(True, 'The id is perfect')